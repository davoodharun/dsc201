{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "The Azure location to deploy all resources"
      },
      "defaultValue": "[resourceGroup().location]"
    },
    "virtualNetworkAddressRange": {
      "type": "string",
      "metadata": {
        "description": "The address range of the new virtual network "
      },
      "defaultValue": "10.0.0.0/16"
    },
    "virtualNetworkSubnet": {
      "type": "string",
      "metadata": {
        "description": "The address range of the subnet created in the new virtual network"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "nicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new AD VM"
      },
      "defaultValue": "10.0.0.4"
    },
    "nicIPAddressVM": {
      "type": "string",
      "metadata": {
        "description": "The IP address of the new AD VM"
      },
      "defaultValue": "10.0.0.5"
    },
    "vmCount": {
      "type": "int",
      "defaultValue": 2
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "VMSize": {
      "type": "string",
      "metadata": {
        "description": "The size of the VM Created"
      },
      "defaultValue": "Standard_DS2_V2"
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The full qualified domain name to be created"
      },
      "defaultValue": "contoso.local"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Path to the nested templates used in this deployment"
      },
      "defaultValue": "[deployment().properties.templateLink.uri]"
    },
    "_artifactsLocationSasToken": {
      "type": "secureString",
      "metadata": {
        "description": "SAS token to access artifacts location, if required"
      },
      "defaultValue": ""
    },
    "compileName": {
      "type": "string",
      "metadata": {
        "description": "Unique value to identify compilation job"
      },
      "defaultValue": "[guid(resourceGroup().id, deployment().name)]"
    }
  },
  "variables": {
    "automationAccountName": "[concat('DSC-',take(guid(resourceGroup().id),5))]",
    "publicIPAddressName": "PIP",
    "publicIPAddressNameVM": "PIPVM",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "Network",
    "virtualNetworkSubnetName": "Subnet",
    "virtualNetworkSubnets": [
      {
        "name": "[variables('virtualNetworkSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('virtualNetworkSubnet')]"
        }
      }
    ],
    "comupters": {
      "DC": {
        "name": "DC",
        "nicName": "DCNic",
        "publicIPAddressName": "PIPDC",
        "nicIPAddress": "10.0.0.4"
      },
      "VM": {
        "name": "VM",
        "nicName": "VMNic",
        "publicIPAddressName": "PIPVM",
        "count": "[parameters('vmCount')]",
        "nicIPAddressStart": "5"
      }
    },
    "DCName": "DC",
    "VMName": "Server",
    "nicName": "NIC",
    "nicNameVM": "NICVM",
    "nicSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('virtualNetworkSubnetName'))]",
    "provisionConfigurationURL": "[uri(parameters('_artifactsLocation'), concat('nested/provisionConfiguration.json', parameters('_artifactsLocationSasToken')))]",
    "provisionNetworkURL": "[uri(parameters('_artifactsLocation'), concat('nested/provisionNetwork.json', parameters('_artifactsLocationSasToken')))]",
    "provisionNicAndPipURL": "[uri(parameters('_artifactsLocation'), concat('nested/provisionNicAndPip.json', parameters('_artifactsLocationSasToken')))]",
    "provisionServerUrl": "[uri(parameters('_artifactsLocation'), concat('nested/provisionServer.json', parameters('_artifactsLocationSasToken')))]",
    "provisionVMUrl": "[uri(parameters('_artifactsLocation'), concat('nested/provisionVM.json', parameters('_artifactsLocationSasToken')))]",
    "provisionDNSUrl": "[uri(parameters('_artifactsLocation'), concat('nested/provisionDNS.json', parameters('_artifactsLocationSasToken')))]"
  },
  "resources": [
    {
      "name": "provisionConfiguration",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('provisionConfigurationURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "_artifactsLocation": {
            "value": "[parameters('_artifactsLocation')]"
          },
          "_artifactsLocationSasToken": {
            "value": "[parameters('_artifactsLocationSasToken')]"
          },
          "automationAccountName": {
            "value": "[variables('automationAccountName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "compileName": {
            "value": "[parameters('compileName')]"
          }
        }
      }
    },
    {
      "name": "provisionNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('provisionNetworkURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "virtualNetworkSubnets": {
            "value": "[variables('virtualNetworkSubnets')]"
          }
        }
      }
    },
    {
      "name": "provisionNicAndPipDC",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "dependsOn": [
        "provisionNetwork"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('provisionNetworkURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "nicName": {
            "value": "[variables('computers').DC.nicName]"
          },
          "nicIPAddress": {
            "value": "[variables('computers').DC.nicIPAddress]"
          },
          "nicSubnetRef": {
            "value": "[variables('nicSubnetRef')]"
          },
          "publicIPAddressName": {
            "value": "[variables('computers').DC.publicIPAddressName]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          }
        }
      }
    },
    {
      "name": "[concat('provisionNicAndPipVM', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "copy": {
        "name": "VMNicAndPip",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "provisionNetwork"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('provisionNicAndPipURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "nicName": {
            "value": "[concat(variables('computers').VM.nicName, copyIndex())]"
          },
          "nicIPAddress": {
            "value": "[concat('10.0.0.', add(variables('computers').VM.nicIPAddressStart, copyIndex()))]"
          },
          "nicSubnetRef": {
            "value": "[variables('nicSubnetRef')]"
          },
          "publicIPAddressName": {
            "value": "[concat(variables('computers').VM.publicIPAddressName, copyIndex())]"
          },
          "publicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          }
        }
      }
    },
    {
      "name": "provisionServer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "dependsOn": [
        "provisionNicAndPipDC",
        "provisionConfiguration"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('provisionServerUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "VMName": {
            "value": "[variables('computers').DC.name]"
          },
          "VMSize": {
            "value": "[parameters('VMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "NicName": {
            "value": "[variables('computers').VM.nicName]"
          },
          "automationAccountName": {
            "value": "[variables('automationAccountName')]"
          }
        }
      }
    },
    {
      "name": "provisionDNS",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "dependsOn": [
        "provisionServer"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('provisionDNSUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "virtualNetworkAddressRange": {
            "value": "[parameters('virtualNetworkAddressRange')]"
          },
          "virtualNetworkSubnets": {
            "value": "[variables('virtualNetworkSubnets')]"
          },
          "dnsAddress": {
            "value": [
              "[parameters('nicIPAddress')]"
            ]
          }
        }
      }
    },
    {
      "name": "provisionVM",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "dependsOn": [
        "provisionDNS",
        "VMNicAndPip"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('provisionVMUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "VMName": {
            "value": "[variables('computers').VM.name]"
          },
          "VMSize": {
            "value": "[parameters('VMSize')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "NicName": {
            "value": "[variables('computers').VM.nicName]"
          },
          "automationAccountName": {
            "value": "[variables('automationAccountName')]"
          }
        }
      }
    }
  ]
}
